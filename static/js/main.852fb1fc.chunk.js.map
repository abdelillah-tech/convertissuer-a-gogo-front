{"version":3,"sources":["styles/Theme.js","constants/index.js","common/Alerts.js","common/Reducer.js","common/Store.js","common/MenuAppBar.js","api/API.js","api/Auth.js","common/AlertTypes.js","common/MessagePublisher.js","components/authentication/Login.js","components/authentication/Signup.js","api/User.js","components/user/Profile.js","components/home/Home.js","api/Executor.js","api/PrivateFile.js","api/FileUpload.js","common/CircularProgressWithLabel.js","api/CodeSave.js","components/Playground/SavedCodeMenu.js","components/Playground/SaveCodeDialog.js","components/Playground/Editor.js","components/Playground/FileReader.js","components/Playground/Playground.js","App.js","serviceWorker.js","index.js"],"names":["Theme","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","EMAIL_PATTERN","AlertComp","props","handleClose","alert","setState","open","PubSub","subscribe","msg","data","alertType","message","charAt","toUpperCase","slice","setTimeout","unsubAlert","unsubscribe","state","Collapse","in","this","zindex","timeout","Alert","severity","action","IconButton","aria-label","color","size","onClick","fontSize","React","Component","Reducer","type","localStorage","setItem","JSON","stringify","payload","token","isAuthenticated","clear","filesList","codesList","selectedFile","resultFileUrl","url","initialState","id","name","Context","createContext","Store","children","useReducer","dispatch","useEffect","parse","getItem","Provider","value","useStyles","makeStyles","theme","root","flexGrow","with","menuButton","marginRight","spacing","toolBar","background","display","justifyContent","toolBarItems","flexDirection","alignItems","iconButton","title","links","textDecoration","margin","MenuAppBar","useContext","classes","useState","anchorEl","setAnchorEl","Boolean","menu","setMenu","handleMenuItems","MenuItem","key","to","className","AppBar","position","Toolbar","pathname","Typography","variant","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","axios","create","baseURL","email","password","API","post","pubMessage","e","publish","response","statusCode","join","flexWrap","container","loginBtn","marginTop","header","textAlign","card","maxWidth","Login","useForm","handleSubmit","control","errors","formState","reset","history","useHistory","onSubmit","AuthService","then","resJson","push","catch","dirtyFields","autoComplete","Card","CardHeader","CardContent","render","field","TextField","fullWidth","placeholder","helperText","error","defaultValue","rules","required","minLength","maxLength","pattern","CardActions","Button","Link","signupBtn","Signup","Fragment","noValidate","uid","get","headers","avatar","width","height","subheader","scores","win","defeat","Profile","setId","setName","setEmail","jwt_decode","Avatar","align","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","toolbarTitle","link","heroContent","cardHeader","backgroundColor","grey","cardPricing","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","startCoding","startCodingBtn","cards","description","Home","Container","component","gutterBottom","Grid","map","item","xs","sm","md","style","titleTypographyProps","subheaderTypographyProps","line","language","code","currentFile","delete","CircularProgressWithLabel","Box","CircularProgress","top","left","bottom","right","text-transform","Math","round","console","log","put","formControl","menuItem","SavedCodeMenu","sendCodeToEditor","handleSelect","CodeSaveService","filter","undefined","minWidth","SaveCodeDialog","setOpen","handleUpdate","FormControl","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","label","onChange","target","DialogActions","editorContainer","inputs","inputsBetween","flexEven","flexFile","flexFileBtn","menuItemClick","minHeight","greyout","editorTitle","borderTopRightRadius","borderTopLeftRadius","whiteSpace","editorItemContainer","aceEditor","borderBottomRightRadius","borderBottomLeftRadius","codeList","borderRadius","Editor","setCurrentFile","themes","languages","startup","Map","set","setTheme","setLanguage","results","setResults","codeExecTime","setCodeExecTime","waitExecuteResponse","setWaitExecuteResponse","executeTimer","setExecuteTimer","timerValue","setTimerValue","waitUploadResponse","setWaitUploadResponse","hideDebug","setHideDebug","outputColor","setOutputColor","setCode","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getFiles","FileUploadService","startTimer","millis","a","i","rangeMap","Promise","res","rej","num","in_min","in_max","out_min","out_max","InputLabel","Select","labelId","input","Input","file","flexBetween","FormData","append","files","hidden","disabled","ExecuteService","result","stderr","stdout","executionTime","resultKey","PrivateFileService","flex","codeFromMenu","mode","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","showPrintMargin","showGutter","highlightActiveLine","readOnly","flexHorizontal","fileReader","border","button","readerTitle","flexH","iframeContainer","iframe","FileReader","src","download","testContainer","editor","reader","paper","Playground","App","ThemeProvider","path","exact","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.852fb1fc.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nlet Theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#ff8C00',\n        },\n        secondary: {\n            main: '#ffff00',\n        },\n    },\n});\n\nTheme = responsiveFontSizes(Theme);\n\nexport default Theme;","export const API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"http://ec2-15-188-232-65.eu-west-3.compute.amazonaws.com/api/v1\" : 'http://localhost:3030/api/v1';\nexport const ACCESS_TOKEN = 'token';\n\nexport const NAME_MIN_LENGTH = 4;\nexport const NAME_MAX_LENGTH = 40;\n\nexport const USERNAME_MIN_LENGTH = 3;\nexport const USERNAME_MAX_LENGTH = 15;\n\nexport const EMAIL_PATTERN = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport const EMAIL_MIN_LENGTH = 3;\nexport const EMAIL_MAX_LENGTH = 40;\n\nexport const PASSWORD_MIN_LENGTH = 6;\nexport const PASSWORD_MAX_LENGTH = 20;\n\nexport const APP_NAME = 'Convertisseur à gogo';\nexport const APP_DESC = 'This is Convertisseur à gogo';\n\nexport const ALERT_SHOW_TIME = 3000 //ms\n\nexport const CODE_EXEC_COOLDOWN = 4000 //ms","import Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React from 'react';\nimport PubSub from 'pubsub-js';\nimport {\n    ALERT_SHOW_TIME\n} from '../constants';\nclass AlertComp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            alertType: 'error',\n            message: '',\n        }\n    }\n\n    handleClose = (alert) => {\n        this.setState({\n            open: false,\n        });\n    }\n\n    alert = PubSub.subscribe('alert', (msg, data) => {\n        this.setState({\n            open: true,\n            alertType: data.alertType,\n            message: data.message.charAt(0).toUpperCase() + data.message.slice(1),\n        });\n\n        setTimeout(() => {\n            this.handleClose()\n        }, ALERT_SHOW_TIME)\n    });\n\n    unsubAlert = PubSub.unsubscribe(alert);\n\n    render() {\n        return (\n            <Collapse in={this.state.open} zindex=\"tooltip\" timeout={300}>\n                <Alert severity={this.state.alertType}\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={\n                                this.handleClose\n                            }\n                        >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    }\n                >\n                    {this.state.message}\n                </Alert >\n            </Collapse >\n        );\n    }\n}\n\nexport default AlertComp;","const Reducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            localStorage.setItem(\"token\", JSON.stringify(action.payload.data.token));\n            return {\n                ...state,\n                isAuthenticated: true,\n                token: action.payload.data.token\n            };\n        case \"LOGOUT\":\n            localStorage.clear();\n            return {\n                ...state,\n                isAuthenticated: false,\n            };\n        case \"FILES\":\n            return {\n                ...state,\n                filesList: action.payload\n            };\n        case \"CODES\":\n            return {\n                ...state,\n                codesList: action.payload\n            };\n        case \"SELECT\":\n            return {\n                ...state,\n                selectedFile: action.payload\n            };\n        case \"RESULT_FILE\":\n            return {\n                ...state,\n                resultFileUrl: action.payload.url\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;","import React, {createContext, useReducer} from \"react\";\nimport Reducer from './Reducer'\n\n\nconst initialState = {\n    isAuthenticated: false,\n    token: null,\n    selectedFile: {id: null, name: '', url: ''},\n    filesList: [],\n    codesList: [],\n    resultFileUrl: null\n};\n\nconst Store = ({children}) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n\n    React.useEffect(() => {\n        const token = JSON.parse(localStorage.getItem('token') || null)\n        if (token) {\n            dispatch({\n                type: 'LOGIN',\n                payload: {\n                    data: {\n                        token\n                    }\n                }\n            })\n        }\n    }, [dispatch])\n    \n    return (\n        <Context.Provider value={[state, dispatch]}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport const Context = createContext(initialState);\nexport default Store;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Link } from 'react-router-dom';\nimport { APP_NAME } from '../constants';\nimport { Context } from \"../common/Store\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        with: '100%'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: '#ff8C00'\n    },\n    toolBar: {\n        background: '#212121',\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    toolBarItems: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    iconButton: {\n        color: '#ff8C00'\n    },\n    title: {\n        flexGrow: 1,\n        color: '#ff8C00'\n    },\n    links: {\n        textDecoration: 'none',\n        color: '#212121',\n        margin: '3px',\n    }\n}));\n\nexport default function MenuAppBar() {\n    const [state, dispatch] = React.useContext(Context);\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const [menu, setMenu] = React.useState(\"\");\n\n    useEffect(() => {\n        handleMenuItems();\n    }, [anchorEl]);\n\n    const handleMenuItems = () => {\n        if (!state.isAuthenticated) {\n            setMenu([\n                <MenuItem key=\"login\" onClick={handleClose}>\n                    <Link to=\"/login\" className={classes.links}>\n                        Login\n                    </Link>\n                </MenuItem>,\n                <MenuItem key=\"signup\" onClick={handleClose}>\n                    <Link to=\"/signup\" className={classes.links}>\n                        Signup\n                    </Link>\n                </MenuItem>\n            ]);\n        }\n        else {\n            setMenu([\n                <MenuItem key=\"playground\" onClick={handleClose}>\n                    <Link to=\"/playground\" className={classes.links}>\n                        Playground\n                    </Link>\n                </MenuItem>,\n                <MenuItem key=\"profile\" onClick={handleClose}>\n                    <Link to=\"/profile\" className={classes.links}>\n                        Profile\n                    </Link>\n                </MenuItem>,\n                <MenuItem key=\"logout\"\n                    onClick={() => {\n                        dispatch({\n                            type: \"LOGOUT\"\n                        })\n                        handleClose()    \n                    }}>\n                    <Link to=\"/\" className={classes.links}>\n                        Logout\n                    </Link>\n                </MenuItem>\n            ]);\n        }\n    }\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolBar}>\n                    <div className={classes.toolBarItems}>\n                        <Link\n                            to={{\n                                pathname: \"/\",\n                            }}\n                            className={classes.links}\n                            >\n                            <Typography variant=\"h6\" className={classes.title} to=\"/home\">\n                                {APP_NAME}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            className={classes.iconButton}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            {menu}\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import axios from 'axios'\nimport { API_BASE_URL } from '../constants'\n\nexport default axios.create({\n    baseURL: API_BASE_URL\n})\n\n","import API from './API'\n\nconst signup = (name, email, password) => {\n    return API\n        .post(\"/authentication/register/\", {\n            name: name,\n            email: email,\n            password: password\n        });\n}\n\nconst login = (email, password) => {\n    return API\n        .post(\"/authentication/login/\", {\n            email: email,\n            password: password\n        });\n\n}\n\nexport default { login, signup,};","export default {\n    success: 'success',\n    error: 'error',\n    warning: 'warning',\n    info: 'info',\n}","import PubSub from 'pubsub-js';\nimport alertType from './AlertTypes';\n\nconst pubMessage = (e, message, alert) => {\n    if(alert === alertType.success) {\n        PubSub.publish('alert', {\n            alertType: alert,\n            message: message\n        })\n    } else if (e && e.response && e.response.data.statusCode === 400) {\n        PubSub.publish('alert', {\n            alertType: alert,\n            message: e.response.data.message.join(\", \")\n        })\n    } else {\n        PubSub.publish('alert', {\n            alertType: alertType.error,\n            message\n        })\n    }\n}\n\nexport default pubMessage;","import React, { useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Link from '@material-ui/core/Link';\nimport AuthService from '../../api/Auth';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport alertType from '../../common/AlertTypes';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Context } from \"../../common/Store\";\nimport {\n    EMAIL_PATTERN,\n    EMAIL_MIN_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH,\n    PASSWORD_MAX_LENGTH\n} from '../../constants';\nimport pubMessage from '../../common/MessagePublisher';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    loginBtn: {\n        marginTop: theme.spacing(2),\n        flexGrow: 1,\n    },\n    header: {\n        textAlign: 'center',\n        background: '#212121',\n        color: '#ff8C00',\n    },\n    card: {\n        marginTop: theme.spacing(10),\n        maxWidth: 345,\n    },\n}));\n\n\nconst Login = () => {\n\n    const [ state, dispatch ] = useContext(Context);\n\n    const classes = useStyles();\n\n    const { handleSubmit, control, formState: { errors }, reset } = useForm();\n\n    const history = useHistory();\n\n    const onSubmit = data => {\n        AuthService.login(data.email, data.password)\n            .then(resJson => {\n                dispatch({\n                    type: \"LOGIN\",\n                    payload: resJson\n                })\n                history.push(\"/playground\");\n            }).catch(e => {\n                pubMessage(e, 'Sorry! Something went wrong. Please try again!', alertType.error)\n                reset(\n                    {\n                        email: '',\n                        password: ''\n                    },\n                    {\n                        errors: true,\n                        dirtyFields: true\n                    }\n                );\n            });\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <form className={classes.container} onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\" >\n                <Card className={classes.card}>\n                    <CardHeader\n                        color=\"primary\"\n                        className={classes.header}\n                        title=\"Login\" />\n                    <CardContent>\n                        <div>\n                            <Controller\n                                render={({ field }) => (\n                                    <TextField\n                                        {...field}\n                                        fullWidth\n                                        type='email'\n                                        margin='normal'\n                                        placeholder='Email'\n                                        helperText={errors.email ? errors.email.message : ''}\n                                        error={!!errors.email}\n                                    />\n                                )}\n                                name=\"email\"\n                                control={control}\n                                defaultValue=''\n                                rules={{\n                                    required: 'Required',\n                                    minLength: {\n                                        value: EMAIL_MIN_LENGTH,\n                                        message: `Your input must exceed ${EMAIL_MIN_LENGTH} characters`,\n                                    },\n                                    maxLength: {\n                                        value: EMAIL_MAX_LENGTH,\n                                        message: `Your input must exceed ${EMAIL_MAX_LENGTH} characters`,\n                                    },\n                                    pattern: {\n                                        value: EMAIL_PATTERN,\n                                        message: \"Wrong format\"\n                                    },\n                                }}\n                            />\n                            <Controller\n                                render={({ field }) => (\n                                    <TextField\n                                        {...field}\n                                        fullWidth\n                                        type='password'\n                                        margin='normal'\n                                        placeholder='Password'\n                                        helperText={errors.password ? errors.password.message : ''}\n                                        error={!!errors.password}\n                                    />\n                                )}\n                                name=\"password\"\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{\n                                    required: 'Required',\n                                    minLength: {\n                                        value: PASSWORD_MIN_LENGTH,\n                                        message: `Your input must exceed ${PASSWORD_MIN_LENGTH} characters`,\n                                    },\n                                    maxLength: {\n                                        value: PASSWORD_MAX_LENGTH,\n                                        message: `Your input must exceed ${PASSWORD_MAX_LENGTH} characters`,\n                                    },\n                                }}\n                            />\n                        </div>\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={classes.loginBtn}\n                        >\n                            Login\n                        </Button>\n                    </CardActions>\n                </Card>\n                <Typography>\n                    Or <Link to=\"/signup\">Register now!</Link>\n                </Typography>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport AuthService from '../../api/Auth';\nimport Link from '@material-ui/core/Link';\nimport {\n    NAME_MIN_LENGTH, \n    NAME_MAX_LENGTH,\n    EMAIL_MIN_LENGTH,\n    EMAIL_MAX_LENGTH,\n    EMAIL_PATTERN,\n    PASSWORD_MIN_LENGTH, \n    PASSWORD_MAX_LENGTH\n} from '../../constants';\nimport { useHistory } from 'react-router';\nimport { Typography } from '@material-ui/core';\n\nimport PubSub from 'pubsub-js';\nimport alertType from '../../common/AlertTypes';\nimport { Controller, useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    signupBtn: {\n        marginTop: theme.spacing(2),\n        flexGrow: 1,\n    },\n    header: {\n        textAlign: 'center',\n        background: '#212121',\n        color: '#ff8C00',\n    },\n    card: {\n        marginTop: theme.spacing(10),\n        maxWidth: 350,\n    },\n}),\n);\n\nconst Signup = () => {\n\n    const { handleSubmit, control, formState: { errors }, reset } = useForm();\n    const history = useHistory();\n    const classes = useStyles();\n\n    const onSubmit = data => {\n        AuthService.signup(data.name, data.email, data.password)\n            .then(() => {\n                history.push(\"/login\");\n            }).catch(e => {\n                if (e.response && e.response.data && e.response.data.statusCode === 403) {\n                    PubSub.publish('alert', {\n                        alertType: alertType.error,\n                        message: 'Incorrect username or password'\n                    })\n                } else {\n                    PubSub.publish('alert', {\n                        alertType: alertType.error,\n                        message: 'Sorry! Something went wrong. Please try again!'\n                    })\n                }\n            });\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n                    <Card className={classes.card}>\n                        <CardHeader className={classes.header} title=\"Signup\" />\n                        <CardContent>\n                            <div>\n                                <Controller\n                                    render={({ field }) => (\n                                        <TextField\n                                            {...field}\n                                            fullWidth\n                                            type='name'\n                                            margin='normal'\n                                            placeholder=\"Maxime d'Harboullé\"\n                                            helperText={errors.name ? errors.name.message : ''}\n                                            error={!!errors.name}\n                                        />\n                                    )}\n                                    name=\"name\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    rules={{\n                                        required: 'Required',\n                                        minLength: {\n                                            value: NAME_MIN_LENGTH,\n                                            message: `Your input must exceed ${NAME_MIN_LENGTH} characters`,\n                                        },\n                                        maxLength: {\n                                            value: NAME_MAX_LENGTH,\n                                            message: `Your input must exceed ${NAME_MAX_LENGTH} characters`,\n                                        },\n                                    }} />\n                                <Controller\n                                    render={({ field }) => (\n                                        <TextField\n                                            {...field}\n                                            fullWidth\n                                            type='email'\n                                            margin='normal'\n                                            placeholder='maxime@gmail.com'\n                                            helperText={errors.email ? errors.email.message : ''}\n                                            error={!!errors.email}\n                                        />\n                                    )}\n                                    name=\"email\"\n                                    control={control}\n                                    defaultValue=''\n                                    rules={{\n                                        required: 'Required',\n                                        minLength: {\n                                            value: EMAIL_MIN_LENGTH,\n                                            message: `Your input must exceed ${EMAIL_MIN_LENGTH} characters`,\n                                        },\n                                        maxLength: {\n                                            value: EMAIL_MAX_LENGTH,\n                                            message: `Your input must exceed ${EMAIL_MAX_LENGTH} characters`,\n                                        },\n                                        pattern: {\n                                            value: EMAIL_PATTERN,\n                                            message: \"Wrong format\"\n                                        },\n                                    }}\n                                />\n                                <Controller\n                                    render={({ field }) => (\n                                        <TextField\n                                            {...field}\n                                            fullWidth\n                                            type='password'\n                                            margin='normal'\n                                            placeholder='Password'\n                                            helperText={errors.password ? errors.password.message : ''}\n                                            error={!!errors.password}\n                                        />\n                                    )}\n                                    name=\"password\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    rules={{\n                                        required: 'Required',\n                                        minLength: {\n                                            value: PASSWORD_MIN_LENGTH,\n                                            message: `Your input must exceed ${PASSWORD_MIN_LENGTH} characters`,\n                                        },\n                                        maxLength: {\n                                            value: PASSWORD_MAX_LENGTH,\n                                            message: `Your input must exceed ${PASSWORD_MAX_LENGTH} characters`,\n                                        },\n                                    }} \n                                />\n                            </div>\n                        </CardContent>\n                        <CardActions>\n                            <Button\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"primary\"\n                                type=\"submit\"\n                                className={classes.signupBtn}\n                            >\n                                Signup\n                        </Button>\n                        </CardActions>\n                    </Card>\n                    <Typography>Already registed? <Link to=\"/login\">Login now!</Link></Typography>\n                </form>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Signup;","import { ACCESS_TOKEN } from '../constants';\nimport API from './API'\n\nconst getCurrentUser = () => {\n    return API\n        .get(\"/user/me\", {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem(ACCESS_TOKEN)}`\n            }\n        })\n        .then((response) => {\n            return response.data;\n        });\n}\n\nconst getUserById = (uid, token) => {\n    return API\n        .get(`/user/${uid}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then((response) => {\n            return response.data;\n        });\n}\n\nexport default { getCurrentUser, getUserById }","import React, { useState, useEffect, useContext } from 'react';\nimport AuthService from '../../api/User';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Context } from \"../../common/Store\";\nimport jwt_decode from \"jwt-decode\";\nimport PubSub from 'pubsub-js';\nimport alertType from '../../common/AlertTypes';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: \"center\"\n    },\n    card: {\n        marginTop: theme.spacing(10),\n        justifyContent: 'center',\n        maxWidth: 345,\n    },\n    avatar: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        fontSize: '40px',\n        background: '#ffff00',\n        color: '#212121'\n    },\n    header: {\n        background: '#212121',\n    },\n    title: {\n        color: '#ffff00'\n    },\n    subheader: {\n        color: '#ffff00'\n    },\n    scores: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n    },\n    win: {\n        color: '#008000'\n    },\n    defeat: {\n        color: '#FF0000'\n    }\n})\n);\n\nconst Profile = () => {\n\n    const classes = useStyles();\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [state, dispatch] = useContext(Context);\n\n    \n    \n    useEffect(() => {\n        const uid = jwt_decode(state.token).id;\n        AuthService.getUserById(uid, state.token)\n            .then(response => {\n                setId(response.id);\n                setName(response.name);\n                setEmail(response.email);\n            }).catch(e => {\n                PubSub.publish('alert', {\n                    alertType: alertType.error,\n                    message: 'Sorry! Something went wrong. Please try again!'\n                })\n            });\n    }, []);\n    \n\n    return (\n        <div className={classes.container}>\n            <Card className={classes.card}>\n                <CardHeader className={classes.header}\n                    classes={{\n                        subheader: classes.subheader,\n                        title: classes.title\n                    }}\n                    avatar={\n                        <Avatar className={classes.avatar}>{name.charAt(0).toUpperCase()}</Avatar>\n                    }\n                    title={`ID:${id} - ${email}`}\n                    subheader={`@${name}`}\n                />\n                <CardContent>\n                    <Typography variant=\"h4\" align=\"center\"></Typography>\n                    <div>\n                        {/*some infos*/}\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport { APP_DESC } from '../../constants';\nimport { Typography, CardHeader, CardActions, Button, Link, CardContent, Container, Grid, Card } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../common/Store\";\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n      ul: {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none',\n      },\n    },\n    appBar: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n      flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n      flexGrow: 1,\n    },\n    link: {\n      margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n      borderBottom: \"3px solid #ff8C00\",\n    },\n    cardPricing: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'baseline',\n      marginBottom: theme.spacing(2),\n    },\n    footer: {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      marginTop: theme.spacing(8),\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      [theme.breakpoints.up('sm')]: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n      },\n    },\n\n    card: {\n        height: \"100%\"\n    },\n    startCoding: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    startCodingBtn: {\n        backgroundColor: \"#ff8C00\",\n        color: \"white\"\n    }\n  }));\n\n  const cards = [\n    {\n      title: 'File upload',\n      description: ['up to 10 files', 'stored on AWS S3'],\n    },\n    {\n      title: 'Languages',\n      subheader: 'Some popular languages',\n      description: [\n        'Javascipt',\n        'Python',\n        '(coming) C',\n        '(coming) C++',\n      ],\n    },\n    {\n      title: 'Preview',\n      subheader: 'Compare your input and output directly on our website',\n\n      description: [\n        '.bmp .png . jpg',\n        'txt files',\n        'and more!',\n      ],\n    },\n  ];\n\nconst Home = () => {\n\n    const [state, dispatch] = React.useContext(Context);\n    const classes = useStyles();\n    const history = useHistory();\n    const startCoding = () => {\n        if(state.isAuthenticated){\n            history.push(\"/playground\");\n        } else {\n            history.push(\"/login\");\n        }\n    }\n\n    return(\n        <div>\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    {APP_DESC}\n                </Typography>\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Quickly write and test your algorithims and test them on some files in an all in one platform. \n                </Typography>\n            </Container>\n            {/* End hero unit */}\n            <Container maxWidth=\"md\" component=\"main\">\n                <Grid container spacing={5} alignItems=\"flex-end\">\n                {cards.map((card) => (\n                    // Enterprise card is full width at sm breakpoint\n                    <Grid item key={card.title} xs={12} sm={6} md={4}>\n                        <Card style={{height: \"100%\"}}>\n                            <CardHeader\n                            title={card.title}\n                            subheader={card.subheader}\n                            titleTypographyProps={{ align: 'center' }}\n                            subheaderTypographyProps={{ align: 'center' }}\n                            action={card.title === 'Pro' ? <StarIcon /> : null}\n                            className={classes.cardHeader}\n                            />\n                            <CardContent>\n                            <ul>\n                                {card.description.map((line) => (\n                                <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                                    {line}\n                                </Typography>\n                                ))}\n                            </ul>\n                            </CardContent>\n                            <CardActions>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n                </Grid>\n            </Container>\n            <br/>\n            <Container className={classes.startCoding}>\n                <Button className={classes.startCodingBtn} onClick={() => startCoding()}>\n                    <Typography component=\"h1\" variant=\"h6\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Start coding!\n                    </Typography>\n                </Button>\n            </Container>\n        </div>\n    );\n}\n\nexport default Home;","import API from './API'\n\n\nconst execute = (language, code, currentFile, token) => {\n    return API\n        .post(\"/execute/\", {\n            language,\n            code,\n            key: currentFile.key\n        },{\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n}\n\nexport default { execute, };","import API from './API'\n\n\nconst urlFromKey = (key, token) => {\n    return API\n        .get(`/private-files/url/${key}`,{\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n}\n\nexport default { urlFromKey };","import API from './API'\n\nconst upload = (data, token) => {\n    return API\n        .post(\"/user/file/\",\n            data,\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nconst getFiles = (token) => {\n    return API\n        .get(\"/user/file\",\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nconst deleteFile = (key, token) => {\n    return API\n        .delete(\"/user/file/\" + key,\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nexport default { upload, getFiles, deleteFile };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { CODE_EXEC_COOLDOWN } from \"../constants\"\n\nexport function CircularProgressWithLabel(props){\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        text-transform=\"lowercase\"\n      >\n        <Typography component=\"span\" color=\"textSecondary\">\n            {`${Math.round(props.value/100*CODE_EXEC_COOLDOWN/1000)}`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n","import API from './API'\n\nconst save = (data, token) => {\n    return API\n        .post(\"/user/code/\",\n            data,\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nconst update = (data, token) => {\n    console.log(data);\n    return API\n        .put(\"/user/code/\",\n            data,\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nconst getCodes = (token) => {\n    return API\n        .get(\"/user/code/\",\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nconst deleteCode = (uid, token) => {\n    return API\n        .delete(`/user/code/${uid}`,\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n}\n\nexport default { save, update, getCodes, deleteCode };","import React, { useContext } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { Context } from \"../../common/Store\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport pubMessage from '../../common/MessagePublisher';\nimport CodeSaveService from '../../api/CodeSave';\nimport alertType from '../../common/AlertTypes';\nimport ListIcon from '@material-ui/icons/List';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: \"center\",\n    },\n    formControl: {\n        //margin: theme.spacing(1),\n    },\n    menuItem: {\n        justifyContent: \"space-between\",\n    },\n    iconButton: {\n        color: \"red\"\n    }\n}));\n\n\nexport default function SavedCodeMenu({ sendCodeToEditor }) {\n\n    const [state, dispatch] = useContext(Context);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleSelect = (code) => {\n        sendCodeToEditor(code);\n        setAnchorEl(null);\n    };\n\n    const handleDelete = (id) => {\n        CodeSaveService.deleteCode(id, state.token)\n            .then((response) => {\n                dispatch({\n                    type: \"CODES\",\n                    payload: state.codesList.filter(code => code.id !== id)\n                })\n                pubMessage(undefined, `Code deleted successfuly`, alertType.success)\n            }).catch(e => {\n                pubMessage(undefined, 'Sorry! We cannot delete this code for the moment', alertType.error)\n            })\n\n        \n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.container}>\n            <Button\n                variant=\"contained\"\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                className={classes.formControl}\n                onClick={handleClick}\n                color=\"primary\">\n                <ListIcon></ListIcon>\n                code\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => handleSelect({})}>default</MenuItem>\n\n                {state.codesList.map((code) => (\n                    <MenuItem\n                        key={code.name}\n                        className={classes.menuItem}\n                        onClick={() => handleSelect(code)}>\n                        {code.name}\n                        <IconButton \n                            aria-label=\"delete\" \n                            className={classes.iconButton}\n                            onClick={() => handleDelete(code.id)}>\n                            <ClearIcon fontSize=\"small\" />\n                        </IconButton>\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n}","import React, { useState, useContext, useEffect } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport CodeSaveService from '../../api/CodeSave';\nimport { Context } from \"../../common/Store\";\nimport pubMessage from '../../common/MessagePublisher';\nimport alertType from '../../common/AlertTypes';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: \"center\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n}));\n\nconst SaveCodeDialog = (code) => {\n\n    const [state, dispatch] = useContext(Context);\n\n    const [open, setOpen] = React.useState(false);\n\n    const [name, setName] = useState(\"\")\n\n    const handleClickOpen = () => {\n        if(code.code.name){\n            handleUpdate()\n        } else {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSave = () => {\n        let data = {\n            code: code.code.code,\n            language: code.language,\n            name: name,\n        }\n        CodeSaveService.save(data, state.token)\n            .then((response) => {\n                pubMessage(undefined, 'Your code is now saved', alertType.success)\n                CodeSaveService.getCodes(state.token)\n                    .then((response) => {\n                        dispatch({\n                            type: \"CODES\",\n                            payload: response.data\n                        })\n                    }).catch(e => {\n                        pubMessage(e, 'Sorry! We cannot load your codes for the moment', alertType.error)\n                        setOpen(false);\n                    })\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your codes for the moment', alertType.error)\n            })\n        \n        setOpen(false);\n    }\n    \n    const handleUpdate = () => {\n        let data = code.code\n        CodeSaveService.update(data, state.token)\n            .then((response) => {\n                pubMessage(undefined, 'Your code is now updated', alertType.success)\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your codes for the moment', alertType.error)\n            })\n        CodeSaveService.getCodes(state.token)\n            .then((response) => {\n                dispatch({\n                    type: \"CODES\",\n                    payload: response.data\n                })\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your codes for the moment', alertType.error)\n                setOpen(false);\n            })\n        setOpen(false);\n    }\n    const onChangeName = (event) => {\n        setName(event.target.value);\n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.container}>\n            <Button\n                variant=\"contained\"\n                className={classes.FormControl}\n                onClick={handleClickOpen}>\n                    <SaveIcon/>\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Save code</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter a title to your code\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Code name\"\n                        type=\"text\"\n                        onChange={onChangeName}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default SaveCodeDialog;","import React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AceEditor from 'react-ace';\nimport PubSub from 'pubsub-js';\nimport alertType from '../../common/AlertTypes';\nimport pubMessage from '../../common/MessagePublisher';\n\n\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\n\nimport 'brace/theme/monokai';\nimport 'brace/theme/github';\nimport 'brace/theme/xcode';\nimport 'brace/theme/terminal';\nimport 'brace/theme/twilight';\n\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport ExecuteService from '../../api/Executor';\nimport PrivateFileService from '../../api/PrivateFile';\nimport FileUploadService from '../../api/FileUpload';\nimport SendIcon from '@material-ui/icons/Send';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Typography } from '@material-ui/core';\nimport { Context } from \"../../common/Store\";\nimport { CircularProgressWithLabel } from \"../../common/CircularProgressWithLabel\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { CODE_EXEC_COOLDOWN } from \"../../constants\"\nimport SavedCodeMenu from './SavedCodeMenu';\nimport SaveCodeDialog from './SaveCodeDialog';\nimport CodeSaveService from '../../api/CodeSave';\nimport { BorderVerticalRounded } from '@material-ui/icons';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    editorContainer: {\n        display: 'flex',\n    },\n    inputs: {\n        display: 'flex',\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n    },\n    \n    inputsBetween: {\n        display: 'flex',\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n\n    flexEven: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n\n    flexFile: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n\n    flexFileBtn: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n\n    menu: {\n        display: \"flex\"\n    },\n\n    menuItem: {\n        justifyContent: \"space-between\",\n    },\n    iconButton: {\n        color: \"red\"\n    },\n    menuItemClick: {\n        minHeight: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    greyout: {\n        color: \"#BBBBBB\"\n    },\n    editorTitle: {\n        color: \"white\",\n        backgroundColor: \"#2f3129\",\n        borderTopRightRadius: \"10px\",\n        borderTopLeftRadius: \"10px\",\n        padding: \"8px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        whiteSpace: \"nowrap\",\n        height: \"40px\"\n    },\n    editorItemContainer: {\n        margin: \"5px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        \n    },\n    aceEditor: {       \n        borderTop: \"2px solid #ff8C00\",\n        display: \"flex\",\n        borderBottomRightRadius: \"10px\",\n        borderBottomLeftRadius: \"10px\",\n    },\n    codeList: {\n        display: 'flex',\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        backgroundColor: \"#ebb879\",\n        borderRadius: \"5px\",\n        color: \"black\"\n    }\n}));\n\nconst Editor = () => {\n\n    const [state, dispatch] = useContext(Context);\n\n    const [currentFile, setCurrentFile] = useState(state.selectedFile);\n\n    const themes = [\n        'monokai',\n        'github',\n        'xcode',\n        'terminal',\n        'twilight',\n    ]\n\n    const languages = [\n        'javascript',\n        'python',\n    ]\n\nconst startup = new Map();\nstartup.set('javascript', {code: 'const run = async (hex_buffer) => {\\n\\tconsole.log(hex_buffer);\\n\\treturn hex_buffer\\n}'})\nstartup.set('python', {code: 'def run(hex_data):\\n\\tprint(hex_data)\\n\\treturn hex_data'})\n\n    const [theme, setTheme] = useState(themes[0]);\n\n    const [language, setLanguage] = useState(localStorage.getItem(\"language\") || languages[1]);\n\n    const [fontSize, setFontSize] = useState(16);\n\n    const [results, setResults] = useState(null);\n\n    const [codeExecTime, setCodeExecTime] = useState(0);\n\n    const [waitExecuteResponse, setWaitExecuteResponse] = useState(false);\n    const [executeTimer, setExecuteTimer] = useState(false);\n    const [timerValue, setTimerValue] = useState(0);\n\n    const [waitUploadResponse, setWaitUploadResponse] = useState(false);\n    \n    const [hideDebug, setHideDebug] = useState(false);\n\n    const [outputColor, setOutputColor] = useState('white')\n\n    const [code, setCode] = useState(startup.get(language));\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    const onChangeCode = (value) => {\n        let currentCode = code\n        code.code = value\n        setCode(code)\n    }\n\n    const handleChangeTheme = (event) => {\n        setTheme(event.target.value);\n    }\n\n    const handleChangeLanguage = (event) => {\n        localStorage.setItem(\"language\", event.target.value);\n        setLanguage(event.target.value);\n        setCode(startup.get(event.target.value))\n    }\n\n    const handleChangeFile = (event) => {\n        setCurrentFile(event.target.value);\n        dispatch({\n            type: \"SELECT\",\n            payload: event.target.value\n        })\n    }\n\n    const componentWillMount = () =>{\n        getFiles()\n    }\n\n    const handleUploadFile = (event) => {\n        setWaitUploadResponse(true);\n        const data = new FormData()\n        data.append('file', event.target.files[0])\n        FileUploadService.upload(data, state.token)\n            .then((response) => {\n\n                getFiles()\n                pubMessage( undefined , 'File uploaded!', alertType.success)\n                PubSub.publish('alert', {\n                    alertType: alertType.success,\n                    message: 'File uploaded!'\n                })\n                setWaitUploadResponse(false)\n            }).catch(e => {\n                setWaitUploadResponse(false)\n                pubMessage(e, 'Sorry! We cannot upload your file. Please try again!')\n            })\n    }\n\n    const handleExecute = () => {\n        setWaitExecuteResponse(true)\n        ExecuteService.execute(language, code.code, currentFile, state.token)\n            .then((response) => {\n                if (!response.data.result.result.stderr) {\n                    setResults(response.data.result.result.stdout)\n                    setCodeExecTime(response.data.result.result.executionTime)\n                    setOutputColor(\"white\")\n                    if(response.data.result.result.resultKey){\n                        PrivateFileService.urlFromKey(response.data.result.result.resultKey, state.token).then((response) => {\n                            dispatch({\n                                type: \"RESULT_FILE\",\n                                payload: response.data\n                            })\n                        })\n                    }\n                } else {\n                    setResults(`${response.data.result.result.stdout ? response.data.result.result.stdout : ''}\\n\\n${response.data.result.result.stderr}`);\n                    setCodeExecTime(response.data.result.result.executionTime)\n                    setOutputColor(\"red\")\n                }\n\n                setWaitExecuteResponse(false)\n                startTimer(CODE_EXEC_COOLDOWN)\n\n\n            }).catch(e => {\n                setWaitExecuteResponse(false)\n                startTimer(CODE_EXEC_COOLDOWN)\n                pubMessage(e, 'Sorry! Something went wrong. Please try again!', alertType.error)\n            });\n    }\n\n    const getFiles = () => {\n        FileUploadService.getFiles(state.token)\n            .then((response) => {\n                dispatch({\n                    type: \"FILES\",\n                    payload: response.data\n                })\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your files for the moment', alertType.error)\n            })\n    }\n\n    const sendCodeToEditor = (codeFromMenu) => {\n        if(!codeFromMenu.name){\n            setCode(startup.get(language))\n        } else {\n            setCode(codeFromMenu)\n        }\n    }\n\n    const startTimer = async (millis) => {\n        setExecuteTimer(true)\n        for (let i = millis / 1000; i > 0; i--) {\n            setTimerValue(rangeMap(i, millis / 1000, 0, 100, 0))\n            await new Promise((res, rej) => setTimeout(() => res(), 1000))\n        }\n        setExecuteTimer(false)\n    }\n\n    const rangeMap = (num, in_min, in_max, out_min, out_max) => {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n\n    const handleDeleteFile = (file) => {\n        FileUploadService.deleteFile(file.key, state.token)\n            .then((response) => {\n                console.log(response);\n            }).catch(e => {\n                pubMessage(e, 'Error in delete file', alertType.error)\n            })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.inputsBetween}>\n                <div className={classes.inputs}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"theme-label\">Theme</InputLabel>\n                        <Select\n                            labelId=\"theme-label\"\n                            id=\"theme\"\n                            value={theme}\n                            onChange={handleChangeTheme}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                        >\n                            {themes.map((theme) => (\n                                <MenuItem key={theme} value={theme}>\n                                    {theme}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"language-label\">Language</InputLabel>\n                        <Select\n                            labelId=\"language-label\"\n                            id=\"language\"\n                            value={language}\n                            onChange={handleChangeLanguage}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                        >\n                            {languages.map((language) => (\n                                <MenuItem key={language} value={language}>\n                                    {language}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"file-label\">Files</InputLabel>\n                        <Select\n                            labelId=\"file-label\"\n                            id=\"file\"\n                            value={currentFile}\n                            onChange={handleChangeFile}\n                            input={<Input />}\n                            MenuProps={MenuProps}\n                            className={classes.menu}\n                        >\n                            {state.filesList.map((file) => (\n                                <MenuItem key={file.name} value={file} className={classes.menuItem, classes.flexBetween}>\n                                    {file.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    {\n                    currentFile.id\n                        ? \n                        <div className={classes.flexEven}>\n                            <Button \n                                aria-label=\"delete\" \n                                className={classes.iconButton}\n                                onClick={() => handleDeleteFile(currentFile)}>\n                                Delete file\n                            </Button>   \n                        </div>\n                        : \"\"\n                    }\n\n                </div>\n                <div className={classes.inputs}>\n\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                        color=\"primary\"\n                        className={classes.formControl}\n                    >\n                        {\n                            waitUploadResponse\n                                ? <CircularProgress />\n                                : <div className={classes.inputs}><CloudUploadIcon></CloudUploadIcon>&nbsp;file</div>\n                        }\n                        <input\n                            type=\"file\"\n                            onChange={handleUploadFile}\n                            hidden\n                        />\n                    </Button>\n\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        className={classes.formControl}\n                        disabled={waitExecuteResponse || executeTimer || !currentFile.id}\n                        onClick={handleExecute}\n                    >\n                        <Typography component=\"div\" className={classes.flexEven}>\n                            {\n                                waitExecuteResponse\n                                    ? <CircularProgress size={10} />\n                                    : executeTimer\n                                        ? <CircularProgressWithLabel size={27} value={timerValue} />\n                                        : <SendIcon />\n                            }\n                        </Typography>\n                    </Button>\n                    <span>\n                        Execution time:&nbsp;\n                        {\n                            waitExecuteResponse\n                                ? <CircularProgress />\n                                : `${codeExecTime}ms`\n                        }\n\n                    </span>\n                </div>\n            </div>\n            <div className={classes.editorContainer}>\n                <div className={classes.editorItemContainer} style={{ flex: hideDebug ? \"6\" : \"1\"}}>\n                    <div className={classes.editorTitle}>\n\n                        <span className={classes.codeList}>\n                            <SavedCodeMenu\n                                className={classes.formControl}\n                                sendCodeToEditor={sendCodeToEditor} />\n                                <span style={{ margin: \"5px\" }}>\n                                    {code.name ? `\"${code.name}\"` : \"Default\"}\n                                </span>\n                        </span>\n                        \n                        <SaveCodeDialog code={code} language={language}/>\n                    </div>\n\n                    <AceEditor\n                        className={classes.aceEditor}\n                        mode={language}\n                        theme={theme}\n                        name=\"editor\"\n                        fontSize={fontSize}\n                        editorProps={{\n                            $blockScrolling: true\n                        }}\n                        onChange={onChangeCode}\n                        value={code.code}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: true,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                        }}\n                        width={\"100%\"}\n\n                    />\n                </div>\n                <div className={classes.editorItemContainer} style={{ flex: \"1\"}}>\n                    <div className={classes.editorTitle}>\n                        <span>\n                            Debug output:\n                        </span>\n                        { \n                        hideDebug \n                            ? <IconButton color=\"primary\" onClick={() => setHideDebug(false)}><ArrowRightIcon></ArrowRightIcon></IconButton>\n                            : <IconButton color=\"primary\" onClick={() => setHideDebug(true)}><ArrowLeftIcon></ArrowLeftIcon></IconButton> \n                        }\n                    </div>\n\n                        <AceEditor\n                            className={classes.aceEditor}\n                            mode=\"text\"\n                            style={{ \n                                color: outputColor\n                            }}\n                            width={\"100%\"}\n                            height={\"100%\"}\n                            theme={theme}\n                            name=\"output\"\n                            fontSize={fontSize + 2}\n                            showPrintMargin={false}\n                            showGutter={false}\n                            highlightActiveLine={false}\n                            value={results}\n                            readOnly={true}\n                            editorProps={{ $blockScrolling: true }}\n                            \n                        />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Editor;","import React, {  useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Context } from \"../../common/Store\";\nimport { Typography, Link } from '@material-ui/core';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '5px'\n    },\n    flexHorizontal: {\n        minWidth: \"100%\",\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    fileReader: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n        height: \"400px\",\n        border: \"2px solid #ff8C00\",\n        backgroundColor: \"#2f3129\",\n        color: \"white\",\n        borderRadius: \"10px\"\n    },\n    inputs: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n    },\n    button: {\n        margin: theme.spacing(2),\n    },\n    readerTitle: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        fontSize: \"24px\",\n        maxHeight: \"50px\"\n    },\n    flexH: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: \"center\"\n    },\n    iframeContainer: {\n        flex: \"0\",\n        display: 'flex',\n        height: \"200px\"\n    },\n    iframe: {\n        backgroundColor: \"white\",\n        margin: \"5px\",\n        height: \"337px\"\n    }\n}));\n\nconst FileReader = () => {\n\n    const [state, dispatch] = useContext(Context);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.flexHorizontal}>\n                { state.selectedFile.url &&\n                    <div\n                        className={classes.fileReader}>\n                        <div className={classes.readerTitle}>\n                            <h3 className={classes.flexH}>\n                                <Typography>Original file</Typography>\n                            </h3>\n                        </div>\n                        <div className={classes.iframeContainer}>\n                            <iframe\n                                title=\"input\"\n                                style={{flex: 1}}\n                                className={classes.iframe}\n                                src={state.selectedFile.url}\n                                >\n                            </iframe>\n                        </div>\n                    </div>\n                }\n                { state.resultFileUrl &&\n                    <div\n                        className={classes.fileReader}>\n                        <div\n                            className={classes.readerTitle}>\n                            <h3 className={classes.flexH}>\n                                <Typography>Edited file</Typography>\n                                { \n                                    state.resultFileUrl \n                                        ? <Link to={state.resultFileUrl} target=\"_blank\" download>\n                                            <IconButton><CloudDownloadIcon style={{ color: \"white\" }}></CloudDownloadIcon></IconButton>\n                                        </Link>\n                                        : <div></div>\n                                }\n                            </h3>\n                        </div>\n                        <div className={classes.iframeContainer}>\n                            <iframe\n                                title=\"output\"\n                                style={{flex: 1}}\n                                className={classes.iframe}\n                                src={state.resultFileUrl}\n                                >\n                            </iframe>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FileReader;","import React, { useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Editor from './Editor';\nimport FileReader from './FileReader';\nimport { Context } from \"../../common/Store\";\nimport FileUploadService from '../../api/FileUpload';\nimport CodeSaveService from '../../api/CodeSave';\nimport alertType from '../../common/AlertTypes';\nimport pubMessage from '../../common/MessagePublisher';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        \n    },\n    testContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    editor: {\n        border: \"2px solid #ff8C00\",\n        display: \"flex\",\n    },\n    reader: {\n    },\n    paper: {\n        minWidth: \"50%\",\n        padding: theme.spacing(1),\n        textAlign: \"center\",\n    }\n}));\n\n\nconst Playground = () => {\n\n    const [state, dispatch] = useContext(Context);\n\n    useEffect(() => {\n        FileUploadService.getFiles(state.token)\n            .then((response) => {\n                dispatch({\n                    type: \"FILES\",\n                    payload: response.data\n                })\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your files for the moment', alertType.error)\n            })\n        CodeSaveService.getCodes(state.token)\n            .then((response) => {\n                dispatch({\n                    type: \"CODES\",\n                    payload: response.data\n                })\n            }).catch(e => {\n                pubMessage(e, 'Sorry! We cannot load your codes for the moment', alertType.error)\n            })\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.testContainer}>\n            <Editor classes={classes.paper} />\n            <FileReader classes={classes.reader} />\n        </div>\n    )\n}\n\nexport default Playground;","import React, { useContext } from 'react';\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './styles/Theme';\nimport './styles/App.css';\n\nimport AlertComp from './common/Alerts';\nimport { Context } from './common/Store';\nimport MenuAppBar from './common/MenuAppBar';\n\nimport Login from './components/authentication/Login';\nimport Signup from './components/authentication/Signup';\nimport Profile from './components/user/Profile';\nimport Home from './components/home/Home';\nimport Playground from './components/Playground/Playground';\n\nconst App = () => {\n\n    const [state ] = useContext(Context);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <MenuAppBar />\n            <AlertComp />\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home />\n                </Route>\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n                <Route path=\"/signup\">\n                    <Signup />\n                </Route>\n                <Route path=\"/profile\">\n                    <div>{!state.isAuthenticated ? <Login /> : <Profile />}</div>\n                </Route>\n                <Route path=\"/playground\">\n                    <div>{!state.isAuthenticated ? <Login /> : <Playground />}</div>\n                </Route>\n            </Switch>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './common/Store';\n\nReactDOM.render(\n    <Router>\n        <Store>\n            <App />\n        </Store>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}